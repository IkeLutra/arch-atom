# $Id$
# Maintainer: Nicola Squartini <tensor5@gmail.com>

_chromiumver=53.0.2785.113
pkgname=electron
pkgver=1.4.0
pkgrel=1
pkgdesc='Build cross platform desktop apps with web technologies'
arch=('i686' 'x86_64')
url='http://electron.atom.io/'
license=('MIT' 'custom')
depends=('c-ares' 'ffmpeg' 'gtk3' 'http-parser' 'libevent' 'libvpx' 'libxslt'
         'libxss' 'minizip' 'nss' 're2' 'snappy')
makedepends=('clang' 'gconf' 'git' 'gperf' 'gtk2' 'harfbuzz-icu' 'jsoncpp'
             'libexif' 'libgnome-keyring' 'libnotify' 'ninja' 'npm' 'pciutils'
             'python2' 'yasm')
optdepends=('gvfs: file deletion support')
source=("git+https://github.com/electron/electron.git#tag=v${pkgver}"
        'git+https://github.com/boto/boto.git'
        'git+https://github.com/electron/brightray.git'
        'breakpad::git+https://github.com/electron/chromium-breakpad.git'
        'git+https://github.com/electron/gyp.git'
        "git+https://github.com/electron/libchromiumcontent.git"
        'native_mate::git+https://github.com/zcbenz/native-mate.git'
        'git+https://github.com/electron/node.git'
        'git+https://github.com/kennethreitz/requests.git'
        'google-breakpad::git+https://chromium.googlesource.com/breakpad/breakpad/src'
        "https://github.com/zcbenz/chromium-source-tarball/releases/download/${_chromiumver}/chromium-${_chromiumver}.tar.xz"
        'dont-bootstrap-libchromiumcontent.patch'
        'dont-update-submodules.patch'
        'dont-use-sysroot.patch'
        'allow-i686.patch'
        'gtk3-menu-bar.patch'
        'gtk3-warnings.patch'
        'use-system-clang.patch'
        'use-system-libraries-in-node.patch'
        'use-system-ninja.patch'
        'use-system-ffmpeg.patch'
        'brightray-dont-update-submodules.patch'
        'brightray-no-whole-archive.patch'
        'brightray-use-system-ffmpeg.patch'
        'gyp-no-rpath.patch'
        'libchromiumcontent-sort-filenames.patch'
        'libchromiumcontent-static-library-only.patch'
        'libchromiumcontent-use-system-ffmpeg.patch'
        'libchromiumcontent-use-system-tools.patch'
        'chromium-gtk3-use-x11-backend.patch'
        'chromium-unset-madv_free.patch'
        'chromium-use-system-ffmpeg.patch'
        'chromium-use-system-minizip.patch'
        'electron.sh'
       )
noextract=("chromium-${_chromiumver}.tar.xz")
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'f2768f4c79516344db73569c4844e0d8722dd73a7b0df13ba4747511001b5a2a'
            '14dbd1eecb7034d9e19e1f0c61b0a36ed3b9c610db008ff2a6da2a540ade1221'
            '7fd0fc72a14b2a08ce0f258a750a9d181386b9277312f2ed5446c29b8ec4e282'
            '75b2e9827f0593e59a35c36c6039ad10d35d7499fed6d97c4ed48ef1cce54c2b'
            'c209475c16b506d8d888a54c8564718cf9775f450d1867e19e86a03d99a119be'
            '3f9bc0e3ee316f172b390584287fb93778ad8923f99f8e80ead8cfd5fa23127a'
            '00506737d1005f76caa8d5505acd4c1d19b42ca62e9f07a26664659447413694'
            'e56184ddcceb29cfb1fcbca52678f72b7b8f8c8e69791016062f381aa78182f2'
            '17cffe3de8c8470f10b78485b1702c4516ba5b0c91689a6afab9dd86f7ab04bc'
            'dc3286a1947240ab6ec562263af0b3c9971da2a4ab45970e3e664563e877280f'
            'fd237dada74a67a5652e0a4661d1e7f3a53a3bfa010b963579346f5456e9f190'
            '3bf045dc4ac1cb32491c4a20de313c3056824e75308f97b9e869fd5a2a166480'
            '47371fb1061cfd8fd4b4f9f4477eb3ea119be1c84554fb2e590e73eda38aa2c2'
            'eed2633bc4a5dd1c9449d19a8569ae1a682f3fac67177091952c4dba4b69bf95'
            '68977a78fb41a549eb449dd35f94e0168d647245516397f0ecdfa7a03a147045'
            '4de540ec76736ef3e14475090916a42c03692c542822b430f1ab3f6d36655511'
            '7bc4cc154643712556f2cfbcba72bc08d032a52a39bccc61c91a7b230fe9a80e'
            '6751b93f47c294a5b3ebca0e5fbb608cc034ac5ac0b30872916f42ba2cae4c5e'
            '2fb2157c854dab173a2ef9b4aa0ab5bb3c0dd077447c4719c7554eee6e0546b6'
            '9fd584d6198b915ad35198d1fcb6318e5ecb43b0befca95384148a305e2954dd'
            'ccba3002243fb1f9a67c8a60af310706caa591d12aef45f1d0f4bda47626f3ab'
            '7cda59fe372b37beca079adf55b951b4f3a6c7a5490813b729fa145562d2ba12'
            'bc78d7af8e514ea28caa6c6ccaf78cc3e80044ef862e2ca7978439f183e36179'
            'c4d171ea37c421e5e586f8735595012ad4aada9a3be9bfe86bc8abb5c5d1488e'
           )

_chromium_flags=('fastbuild=2'
                 'host_clang=0'
                 'linux_use_bundled_binutils=0'
                 'linux_use_bundled_gold=0'
                 'release_extra_cflags="-O3"'
                 'remove_webcore_debug_symbols=1'
                 'use_gconf=0'
                 'use_gtk3=1'
                 'use_sysroot=0'
                 'use_system_expat=1'
                 'use_system_ffmpeg=1'
                 'use_system_flac=1'
                 'use_system_harfbuzz=1'
                 'use_system_jsoncpp=1'
                 'use_system_libevent=1'
                 'use_system_libjpeg=1'
                 'use_system_libpng=1'
                 'use_system_libvpx=1'
                 'use_system_libwebp=1'
                 'use_system_libxml=1'
                 'use_system_libxslt=1'
                 'use_system_re2=1'
                 'use_system_snappy=1'
                 'use_system_yasm=1'
                 'use_system_zlib=1'
                 'werror=""'  # required by bundled ICU and i686 build
                )

prepare() {
  cd "${srcdir}"/electron

  ### Bump version (temporary fix)
  git config user.email "tensor5@gmail.com"
  git config user.name "Nicola Squartini"
  python2 script/bump-version.py 1.4.0
  ###

  patch -Np1 -i "${srcdir}"/gtk3-menu-bar.patch
  patch -Np1 -i "${srcdir}"/gtk3-warnings.patch
  patch -Np1 -i "${srcdir}"/use-system-clang.patch
  patch -Np1 -i "${srcdir}"/use-system-libraries-in-node.patch
  patch -Np1 -i "${srcdir}"/use-system-ninja.patch
  patch -Np1 -i "${srcdir}"/use-system-ffmpeg.patch
  patch -Np1 -i "${srcdir}"/dont-update-submodules.patch
  patch -Np1 -i "${srcdir}"/dont-use-sysroot.patch
  patch -Np1 -i "${srcdir}"/dont-bootstrap-libchromiumcontent.patch
  patch -Np1 -i "${srcdir}"/allow-i686.patch

  mkdir -p "${srcdir}"/python2-path
  ln -sf /usr/bin/python2 "${srcdir}/python2-path/python"

  for m in boto breakpad brightray native_mate node requests; do
    git submodule init vendor/${m}
    git config submodule.vendor/${m}.url "${srcdir}/${m}"
  done
  git submodule update

  cd "${srcdir}"/electron/vendor/breakpad
  git submodule init src
  git config submodule.src.url "${srcdir}"/google-breakpad
  git submodule update

  cd "${srcdir}"/electron/vendor/brightray
  patch -Np1 -i "${srcdir}"/brightray-dont-update-submodules.patch
  patch -Np1 -i "${srcdir}"/brightray-use-system-ffmpeg.patch
  patch -Np1 -i "${srcdir}"/brightray-no-whole-archive.patch
  for m in libchromiumcontent gyp; do
    git submodule init vendor/${m}
    git config submodule.vendor/${m}.url "${srcdir}/${m}"
  done
  git submodule update
  # Add extra libraries for unbundling
  sed -e "s/'-lexpat',/'-lexpat', '<\!@(pkg-config --libs-only-l libavcodec libavformat libavutil libevent flac harfbuzz-icu jsoncpp minizip libpng vpx libwebpdemux libxml-2.0 libxslt)', '-ljpeg', '-lre2', '-lsnappy', '-latomic',/" \
      -e 's/gtk+-2\.0/gtk+-3.0/' \
      -i brightray.gyp

  cd "${srcdir}"/electron/vendor/brightray/vendor/gyp
  # Remove a useless $ORIGIN/lib/ rpath from the electron binary
  patch -Np1 -i "${srcdir}"/gyp-no-rpath.patch

  cd "${srcdir}"/electron/vendor/brightray/vendor/libchromiumcontent
  git submodule update --init vendor/python-patch
  patch -Np1 -i "${srcdir}"/libchromiumcontent-sort-filenames.patch  # deterministic build
  patch -Np1 -i "${srcdir}"/libchromiumcontent-use-system-tools.patch
  patch -Np1 -i "${srcdir}"/libchromiumcontent-use-system-ffmpeg.patch
  patch -Np1 -i "${srcdir}"/libchromiumcontent-static-library-only.patch
  rm patches/third_party/ffmpeg/ffmpeg.patch  # Use system ffmpeg
  echo 'Extracting chromium source...'
  tar -xJf "${srcdir}"/chromium-${_chromiumver}.tar.xz
  mv chromium-${_chromiumver} src
  if [ ! -e src/.version ]; then
    echo "${_chromiumver}" > src/.version
  fi
  cd src
  patch -Np1 -i "${srcdir}"/chromium-gtk3-use-x11-backend.patch
  patch -Np1 -i "${srcdir}"/chromium-unset-madv_free.patch  # fixes crash with kernels < 4.5
  patch -Np1 -i "${srcdir}"/chromium-use-system-ffmpeg.patch
  patch -Np1 -i "${srcdir}"/chromium-use-system-minizip.patch
  python2 build/linux/unbundle/replace_gyp_files.py "${_chromium_flags[@]/#/-D}"
}

build() {
  export PATH="${srcdir}/python2-path:${PATH}"

  if [ "${CARCH}" == 'x86_64' ]; then
    _target=x64
  else
    _target=ia32
  fi

  cd "${srcdir}"/electron
  LDFLAGS="${LDFLAGS} -Wl,-z,noexecstack"
  script/bootstrap.py --verbose \
                      --target_arch=${_target} \
                      --clang_dir=/usr \
                      --build_libchromiumcontent \
                      --defines="${_chromium_flags[*]}"
  script/build.py -c Release
}

package() {
  cd "${srcdir}"/electron

  _cc="${srcdir}"/electron/vendor/brightray/vendor/libchromiumcontent/dist/main

  install -d -m755 "${pkgdir}"/usr/share/licenses/electron
  install -m644 LICENSE "${_cc}"/LICENSES.chromium.html \
          "${pkgdir}"/usr/share/licenses/electron
  for lib in brightray native_mate node; do
    install -m644 vendor/${lib}/LICENSE \
            "${pkgdir}"/usr/share/licenses/electron/LICENSE-${lib}
  done
  install -m644 vendor/brightray/vendor/libchromiumcontent/src/LICENSE \
          "${pkgdir}"/usr/share/licenses/electron/LICENSE-chromium

  cd out/R
  install -d -m755 "${pkgdir}"/usr/lib/electron
  install -m644 blink_image_resources_200_percent.pak \
          content_resources_200_percent.pak content_shell.pak icudtl.dat \
          natives_blob.bin snapshot_blob.bin ui_resources_200_percent.pak \
          views_resources_200_percent.pak \
          "${pkgdir}"/usr/lib/electron
  install -m755 electron "${pkgdir}"/usr/lib/electron
  install -D -m755 "${srcdir}"/electron.sh "${pkgdir}"/usr/bin/electron
  # namcap warning: Referenced library 'libnode.so' is an uninstalled dependency
  # Fixable by moving libnode.so to /usr/lib
  install -m644 libnode.so "${pkgdir}"/usr/lib/electron
  cp -r locales resources "${pkgdir}"/usr/lib/electron

  echo -n "v${pkgver}" > "${pkgdir}"/usr/lib/electron/version

  # Install Node headers
  _headers_dest="${pkgdir}/usr/lib/electron/node"
  install -d -m755 "${_headers_dest}"
  cd "${srcdir}"/electron/vendor/node
  find src deps/http_parser deps/zlib deps/uv deps/npm \
    -name "*.gypi" \
      -exec install -D -m644 '{}' "${_headers_dest}/{}" \; \
    -or -name "*.h" \
      -exec install -D -m644 '{}' "${_headers_dest}/{}" \;
  install -m644 {common,config}.gypi "${_headers_dest}"
  cd "${_cc}"/src
  find v8 -name "*.h" \
    -exec install -D -m644 '{}' "${_headers_dest}/deps/{}" \;
  # echo '9' > "${_headers_dest}/installVersion"
}
