# $Id$
# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=atom
pkgver=1.10.2
pkgrel=2
pkgdesc='A hackable text editor for the 21st Century'
arch=('i686' 'x86_64')
url='https://github.com/atom/atom'
license=('MIT' 'custom')
depends=('apm'
         'electron')
makedepends=('git' 'npm')
optdepends=('ctags: symbol indexing support')
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/atom/atom/archive/v${pkgver}.tar.gz"
        'autocomplete-plus.patch'
        'beforeunload.patch'
        'deprecated-api.patch'
        'fix-atom-sh.patch'
        'fix-license-path.patch'
        'fix-marker-index.patch'
        'fix-oniguruma.patch'
        'fix-pane-resize-handle.patch'
        'run-as-node.patch'
        'symbols-view-use-system-ctags.patch'
        'tree-view.patch'
        'use-system-apm.patch'
        'use-system-electron.patch')
sha256sums=('de47aa7d80b3e31f1c42823fec6e98a9473021c022970a8548cb36c498a7e6f8'
            '58198d214edc434580c5764f749e26fb686d77c3c983d01f247f48aec84eb1a4'
            'e92e23bbf839bec6611b2ac76c1f5bba35b476983b0faa9b310288e2956247a2'
            '6fca91b3e80248a96fc4b6b0228602d4dd68ef851cb059a97a7379e72e53b432'
            'd3eb239f53feb3181fb4d57d2db391d7b31ce2188c5bd5b79d9ed3133351cd90'
            'a606d1efbea1f68a0a9c250b1d7023315a5392fa23f220600304c7308be7ebbb'
            '2569702bee0508ee38a181f28bc99d6844725de206362a010705d84da09735c3'
            'c0ae6c64802bc20219bc9142bd6e62e65853044b4a678d3f7ec72dcb61d22274'
            '41aaa35b638e29d28b5d92077b7b242725046cc11d4c51d3eca589eaed977ec5'
            '991626ab07c90643e14039a1367769761262ddbc108a66193c08fe146b0222e9'
            'a5a2b1fefa29799b3225c4aa3fe0e5b057b2b320f98ad7bc28d3596923e52b41'
            '109af01ceae45615994f2ac08292c44db339bf7ef89369b077e04fcfc35aa3dd'
            '0c9a815a3e6f13134cd648af67e1de3b9c24297b731d5815967a08256ec54f58'
            '1ee2fac6dd1f1ffb82b312a716fc96d8a838a16a727894ab3240979a5773fb0d')

prepare() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  patch -Np1 -i "${srcdir}"/fix-atom-sh.patch
  patch -Np1 -i "${srcdir}"/use-system-electron.patch
  patch -Np1 -i "${srcdir}"/use-system-apm.patch
  patch -Np1 -i "${srcdir}"/fix-license-path.patch

  # apm with system (updated) nodejs cannot 'require' modules inside asar
  sed -e "s/, 'generate-asar'//" -i build/Gruntfile.coffee

  # Fix for Electron 1.2.0
  patch -Np1 -i "${srcdir}"/beforeunload.patch
  patch -Np1 -i "${srcdir}"/run-as-node.patch

  # Fix for Electron 1.3.0
  patch -Np1 -i "${srcdir}"/fix-pane-resize-handle.patch
}

build() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  export ATOM_RESOURCE_PATH="$srcdir/atom-$pkgver"
  # If unset, ~/.atom/.node-gyp/.atom/.npm is used
  export NPM_CONFIG_CACHE="${HOME}/.atom/.npm"
  apm clean
  apm install

  # Use system ctags
  cd node_modules/symbols-view
  patch -Np1 -i "${srcdir}"/symbols-view-use-system-ctags.patch
  rm -r vendor
  cd ../..

  # Fix for Node 6
  cd node_modules/autocomplete-plus
  patch -Np1 -i "${srcdir}"/autocomplete-plus.patch
  cd ../..
  cd node_modules/tree-view
  patch -Np1 -i "${srcdir}"/tree-view.patch
  cd ../..

  # Fix for Electron 1.3
  _node_gyp="node-gyp rebuild --target=$(</usr/lib/electron/version) --dist-url=https://atom.io/download/atom-shell"
  cd node_modules/marker-index
  patch -Np1 -i "${srcdir}"/fix-marker-index.patch
  ${_node_gyp}
  cd ../oniguruma
  patch -Np1 -i "${srcdir}"/fix-oniguruma.patch
  ${_node_gyp}
  cd ../../

  _packagesToDedupe=('abbrev'
                     'amdefine'
                     'atom-space-pen-views'
                     'cheerio'
                     'domelementtype'
                     'fs-plus'
                     'grim'
                     'highlights'
                     'humanize-plus'
                     'iconv-lite'
                     'inherits'
                     'loophole'
                     'oniguruma'
                     'q'
                     'request'
                     'rimraf'
                     'roaster'
                     'season'
                     'sigmund'
                     'semver'
                     'through'
                     'temp')
  apm dedupe ${_packagesToDedupe[@]}
  cd build
  npm install
  cd ..
  script/grunt --channel=stable
}

package() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  install -d -m 755 "${pkgdir}"/usr/lib
  cp -r out/Atom/resources/app "${pkgdir}"/usr/lib
  mv "${pkgdir}"/usr/lib/app "${pkgdir}"/usr/lib/atom

  install -d -m 755 "${pkgdir}/usr/share/applications"
  sed -e "s|<%= appName %>|Atom|" \
      -e "s/<%= description %>/${pkgdesc}/" \
      -e "s|<%= installDir %>/share/<%= appFileName %>/atom|electron --app=/usr/lib/atom|" \
      -e "s|<%= iconPath %>|atom|" \
      resources/linux/atom.desktop.in > "${pkgdir}/usr/share/applications/atom.desktop"

  for size in 16 24 32 48 64 128 256 512 1024; do
    install -D -m 755 resources/app-icons/stable/png/${size}.png \
            "${pkgdir}"/usr/share/icons/hicolor/${size}x${size}/apps/atom.png
  done
  ln -sf ../../../share/icons/hicolor/1024x1024/apps/atom.png \
      "${pkgdir}"/usr/lib/atom/resources/atom.png

  install -D -m 755 out/Atom/resources/new-app/atom.sh "${pkgdir}/usr/bin/atom"

  install -D -m 644 out/Atom/resources/LICENSE.md \
          "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE.md"

  # Remove useless stuff
  find "${pkgdir}"/usr/lib/atom/node_modules \
      -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -path "*/less/gradle" -prune -exec rm -r '{}' \; \
      -or -path "*/task-lists/src" -prune -exec rm -r '{}' \;
}
