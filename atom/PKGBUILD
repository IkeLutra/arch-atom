# $Id$
# Maintainer: Nicola Squartini <tensor5@gmail.com>

pkgname=atom
pkgver=1.11.2
pkgrel=1
pkgdesc='A hackable text editor for the 21st Century'
arch=('i686' 'x86_64')
url='https://github.com/atom/atom'
license=('MIT' 'custom')
depends=('apm'
         'electron')
makedepends=('git' 'npm')
optdepends=('ctags: symbol indexing support')
options=(!emptydirs)
source=("${pkgname}-${pkgver}.tar.gz::https://github.com/atom/atom/archive/v${pkgver}.tar.gz"
        'autocomplete-plus.patch'
        'beforeunload.patch'
        'deprecated-api.patch'
        'fix-atom-sh.patch'
        'fix-ime-events-handler.patch'
        'fix-license-path.patch'
        'fix-oniguruma.patch'
        'fix-pane-resize-handle.patch'
        'run-as-node.patch'
        'symbols-view-use-system-ctags.patch'
        'use-system-apm.patch'
        'use-system-electron.patch')
sha256sums=('b7c09d03d950b0a6aca82225f072d9005d5681887e3a7c466b0504bf64d7c5cd'
            '58198d214edc434580c5764f749e26fb686d77c3c983d01f247f48aec84eb1a4'
            '9c419697ed1ce272a864f1a89c91d4a2e314f88ba1dc6f1836468db6572f95b6'
            '6fca91b3e80248a96fc4b6b0228602d4dd68ef851cb059a97a7379e72e53b432'
            'b0c94877962e98818b8c14865c35ac0d0e088838e24670264069b7417ce1b6ab'
            '25ccca2a773f6bf449691eac10fc4e78f5c2d264092c9f792177f6bd7ea32cce'
            '883b0be8b68cda5d1004e99e8c1622ca633cf3eaf5c4aad7cc25f8dcb1235350'
            'c0ae6c64802bc20219bc9142bd6e62e65853044b4a678d3f7ec72dcb61d22274'
            '41aaa35b638e29d28b5d92077b7b242725046cc11d4c51d3eca589eaed977ec5'
            'b17d546406362572d94b5aee6cc66d9a55fd3967fc256d54f5070cc6ff415554'
            'a5a2b1fefa29799b3225c4aa3fe0e5b057b2b320f98ad7bc28d3596923e52b41'
            '8ad15829dd52df15eb2a963f96b5f1869950c6e90ed8dfeac2a3202d8389d4a2'
            'c246a7ee41a2b0f9334b6130abf58587fc70a85f5a24922e2e4083c213e6468a')

prepare() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  patch -Np1 -i "${srcdir}"/fix-atom-sh.patch
  patch -Np1 -i "${srcdir}"/use-system-electron.patch
  patch -Np1 -i "${srcdir}"/use-system-apm.patch
  patch -Np1 -i "${srcdir}"/fix-license-path.patch

  # Fix for Electron 1.2.0
  patch -Np1 -i "${srcdir}"/beforeunload.patch
  patch -Np1 -i "${srcdir}"/run-as-node.patch

  # Fix for Electron 1.3.0
  patch -Np1 -i "${srcdir}"/fix-pane-resize-handle.patch

  # Fix for Electron 1.4.0
  patch -Np1 -i "${srcdir}"/fix-ime-events-handler.patch
}

build() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  export ATOM_RESOURCE_PATH="$srcdir/atom-$pkgver"
  # If unset, ~/.atom/.node-gyp/.atom/.npm is used
  export NPM_CONFIG_CACHE="${HOME}/.atom/.npm"
  apm clean
  apm install

  # Use system ctags
  cd node_modules/symbols-view
  patch -Np1 -i "${srcdir}"/symbols-view-use-system-ctags.patch
  rm -r vendor
  cd ../..

  # Fix for Node 6
  cd node_modules/autocomplete-plus
  patch -Np1 -i "${srcdir}"/autocomplete-plus.patch
  cd ../..

  # Fix for Electron 1.3
  _node_gyp="node-gyp rebuild --target=$(</usr/lib/electron/version) --dist-url=https://atom.io/download/atom-shell"
  cd node_modules/oniguruma
  patch -Np1 -i "${srcdir}"/fix-oniguruma.patch
  ${_node_gyp}
  cd ../../

  cd script
  npm install
  ./build
}

package() {
  cd "${srcdir}/${pkgname}-${pkgver}"

  install -d -m 755 "${pkgdir}"/usr/lib
  cp -r out/app "${pkgdir}"/usr/lib/atom

  install -d -m 755 "${pkgdir}/usr/share/applications"
  sed -e "s|<%= appName %>|Atom|" \
      -e "s/<%= description %>/${pkgdesc}/" \
      -e "s|<%= installDir %>/share/<%= appFileName %>/atom|electron --app=/usr/lib/atom|" \
      -e "s|<%= iconPath %>|atom|" \
      resources/linux/atom.desktop.in > "${pkgdir}/usr/share/applications/atom.desktop"

  for size in 16 24 32 48 64 128 256 512 1024; do
    install -D -m 644 resources/app-icons/stable/png/${size}.png \
            "${pkgdir}"/usr/share/icons/hicolor/${size}x${size}/apps/atom.png
  done
  ln -sf ../../../share/icons/hicolor/1024x1024/apps/atom.png \
      "${pkgdir}"/usr/lib/atom/resources/atom.png

  install -D -m 755 atom.sh "${pkgdir}/usr/bin/atom"

  install -d -m 755 "${pkgdir}/usr/share/licenses/${pkgname}"
  node -e "require('./script/lib/get-license-text')().then((licenseText) => require('fs').writeFileSync('${pkgdir}/usr/share/licenses/${pkgname}/LICENSE.md', licenseText))"

  # Remove useless stuff
  rm "${pkgdir}"/usr/lib/atom/node_modules/.bin/pegjs
  find "${pkgdir}"/usr/lib/atom/node_modules \
      -name "*.a" -exec rm '{}' \; \
      -or -name "*.bat" -exec rm '{}' \; \
      -or -name "*.node" -exec chmod a-x '{}' \; \
      -or -name "benchmark" -prune -exec rm -r '{}' \; \
      -or -name "doc" -prune -exec rm -r '{}' \; \
      -or -name "html" -prune -exec rm -r '{}' \; \
      -or -name "man" -prune -exec rm -r '{}' \; \
      -or -path "*/less/gradle" -prune -exec rm -r '{}' \; \
      -or -path "*/task-lists/src" -prune -exec rm -r '{}' \;
}
